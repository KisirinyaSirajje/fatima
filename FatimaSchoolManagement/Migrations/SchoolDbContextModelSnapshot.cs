// <auto-generated />
using System;
using FatimaSchoolManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FatimaSchoolManagement.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    partial class SchoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("FatimaSchoolManagement.Models.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcademicYear")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClassId");

                    b.HasIndex("ClassName", "AcademicYear")
                        .IsUnique();

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            AcademicYear = 2024,
                            ClassName = "S1",
                            Description = "Senior 1",
                            IsActive = true,
                            Level = 1
                        },
                        new
                        {
                            ClassId = 2,
                            AcademicYear = 2024,
                            ClassName = "S2",
                            Description = "Senior 2",
                            IsActive = true,
                            Level = 1
                        },
                        new
                        {
                            ClassId = 3,
                            AcademicYear = 2024,
                            ClassName = "S3",
                            Description = "Senior 3",
                            IsActive = true,
                            Level = 1
                        },
                        new
                        {
                            ClassId = 4,
                            AcademicYear = 2024,
                            ClassName = "S4",
                            Description = "Senior 4",
                            IsActive = true,
                            Level = 1
                        },
                        new
                        {
                            ClassId = 5,
                            AcademicYear = 2024,
                            ClassName = "S5",
                            Description = "Senior 5",
                            IsActive = true,
                            Level = 2
                        },
                        new
                        {
                            ClassId = 6,
                            AcademicYear = 2024,
                            ClassName = "S6",
                            Description = "Senior 6",
                            IsActive = true,
                            Level = 2
                        });
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Mark", b =>
                {
                    b.Property<int>("MarkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcademicYear")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("BOTMark")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("EOTMark")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MOTMark")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Term")
                        .HasColumnType("INTEGER");

                    b.HasKey("MarkId");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("StudentId", "SubjectId", "AcademicYear", "Term")
                        .IsUnique();

                    b.ToTable("Marks");
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcademicYear")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AverageMark")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClassPosition")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GeneratedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadTeacherComments")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NextTermBegins")
                        .HasColumnType("TEXT");

                    b.Property<string>("OverallGrade")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeacherComments")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Term")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalMarks")
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("TotalStudents")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReportId");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId", "AcademicYear", "Term")
                        .IsUnique();

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClassId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LINNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NextOfKin")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NextOfKinContact")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("ParentsContact")
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoPath")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentNumber")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("SubjectId");

                    b.HasIndex("SubjectCode")
                        .IsUnique();

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "ENG",
                            SubjectName = "English Language"
                        },
                        new
                        {
                            SubjectId = 2,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "MATH",
                            SubjectName = "Mathematics"
                        },
                        new
                        {
                            SubjectId = 3,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "PHYS",
                            SubjectName = "Physics"
                        },
                        new
                        {
                            SubjectId = 4,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "CHEM",
                            SubjectName = "Chemistry"
                        },
                        new
                        {
                            SubjectId = 5,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "BIO",
                            SubjectName = "Biology"
                        },
                        new
                        {
                            SubjectId = 6,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "HIST",
                            SubjectName = "History"
                        },
                        new
                        {
                            SubjectId = 7,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "GEO",
                            SubjectName = "Geography"
                        },
                        new
                        {
                            SubjectId = 8,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "LIT",
                            SubjectName = "Literature"
                        },
                        new
                        {
                            SubjectId = 9,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "REL",
                            SubjectName = "Religious Education"
                        },
                        new
                        {
                            SubjectId = 10,
                            IsActive = true,
                            Level = 1,
                            SubjectCode = "LUG",
                            SubjectName = "Luganda"
                        },
                        new
                        {
                            SubjectId = 11,
                            IsActive = true,
                            Level = 2,
                            SubjectCode = "A-ENG",
                            SubjectName = "Advanced English"
                        },
                        new
                        {
                            SubjectId = 12,
                            IsActive = true,
                            Level = 2,
                            SubjectCode = "A-MATH",
                            SubjectName = "Advanced Mathematics"
                        },
                        new
                        {
                            SubjectId = 13,
                            IsActive = true,
                            Level = 2,
                            SubjectCode = "A-PHYS",
                            SubjectName = "Advanced Physics"
                        },
                        new
                        {
                            SubjectId = 14,
                            IsActive = true,
                            Level = 2,
                            SubjectCode = "A-CHEM",
                            SubjectName = "Advanced Chemistry"
                        },
                        new
                        {
                            SubjectId = 15,
                            IsActive = true,
                            Level = 2,
                            SubjectCode = "A-BIO",
                            SubjectName = "Advanced Biology"
                        },
                        new
                        {
                            SubjectId = 16,
                            IsActive = true,
                            Level = 2,
                            SubjectCode = "A-HIST",
                            SubjectName = "Advanced History"
                        },
                        new
                        {
                            SubjectId = 17,
                            IsActive = true,
                            Level = 2,
                            SubjectCode = "A-GEO",
                            SubjectName = "Advanced Geography"
                        },
                        new
                        {
                            SubjectId = 18,
                            IsActive = true,
                            Level = 2,
                            SubjectCode = "A-ECO",
                            SubjectName = "Economics"
                        });
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Mark", b =>
                {
                    b.HasOne("FatimaSchoolManagement.Models.Class", "Class")
                        .WithMany("Marks")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FatimaSchoolManagement.Models.Student", "Student")
                        .WithMany("Marks")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FatimaSchoolManagement.Models.Subject", "Subject")
                        .WithMany("Marks")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Report", b =>
                {
                    b.HasOne("FatimaSchoolManagement.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("FatimaSchoolManagement.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Student", b =>
                {
                    b.HasOne("FatimaSchoolManagement.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Class", b =>
                {
                    b.Navigation("Marks");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Student", b =>
                {
                    b.Navigation("Marks");
                });

            modelBuilder.Entity("FatimaSchoolManagement.Models.Subject", b =>
                {
                    b.Navigation("Marks");
                });
#pragma warning restore 612, 618
        }
    }
}
