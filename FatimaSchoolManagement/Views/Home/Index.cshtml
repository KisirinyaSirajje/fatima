@model FatimaSchoolManagement.Models.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard - Our Lady of Fatima Secondary School";
}

<div class="container-fluid">
    <!-- School Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="text-center">
                <h1 class="display-4 text-primary">Our Lady of Fatima Secondary School</h1>
                <p class="lead">School Management System Dashboard</p>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-primary text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.TotalStudents</h4>
                            <p class="card-text">Total Students</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-users fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-success text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.TotalClasses</h4>
                            <p class="card-text">Active Classes</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-school fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-info text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.OLevelStudents</h4>
                            <p class="card-text">O-Level Students</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-graduation-cap fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-warning text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.ALevelStudents</h4>
                            <p class="card-text">A-Level Students</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-user-graduate fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-secondary text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.TotalSubjects</h4>
                            <p class="card-text">Subjects</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-book fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
            <div class="card bg-dark text-white h-100">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@Model.AveragePerformance.ToString("F1")%</h4>
                            <p class="card-text">Avg Performance</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-chart-line fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Quick Actions</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-3 col-md-6 mb-3">
                            <a href="@Url.Action("Create", "Students")" class="btn btn-primary btn-lg w-100">
                                <i class="fas fa-user-plus"></i> Add New Student
                            </a>
                        </div>
                        <div class="col-lg-3 col-md-6 mb-3">
                            <a href="@Url.Action("Index", "Students")" class="btn btn-success btn-lg w-100">
                                <i class="fas fa-users"></i> View All Students
                            </a>
                        </div>
                        <div class="col-lg-3 col-md-6 mb-3">
                            <a href="@Url.Action("ClassEntry", "Marks")" class="btn btn-warning btn-lg w-100">
                                <i class="fas fa-edit"></i> Enter Marks
                            </a>
                        </div>
                        <div class="col-lg-3 col-md-6 mb-3">
                            <a href="@Url.Action("Index", "Reports")" class="btn btn-info btn-lg w-100">
                                <i class="fas fa-file-alt"></i> Generate Reports
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Recent Students -->
        <div class="col-lg-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Recent Students</h5>
                </div>
                <div class="card-body">
                    @if (Model.RecentStudents.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var student in Model.RecentStudents)
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(student.PhotoPath))
                                        {
                                            <img src="@student.PhotoPath" alt="Student Photo" class="rounded-circle me-3" style="width: 40px; height: 40px; object-fit: cover;">
                                        }
                                        else
                                        {
                                            <div class="bg-secondary rounded-circle me-3 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                                <i class="fas fa-user text-white"></i>
                                            </div>
                                        }
                                        <div>
                                            <h6 class="mb-0">@student.FullName</h6>
                                            <small class="text-muted">@student.StudentNumber - @student.ClassName</small>
                                        </div>
                                    </div>
                                    <span class="badge bg-primary">@student.Level.ToString().Replace("Level", "-Level")</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No students found.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Top Performers -->
        <div class="col-lg-6 mb-4">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Top Performers</h5>
                </div>
                <div class="card-body">
                    @if (Model.TopPerformers.Any())
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var performer in Model.TopPerformers)
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        @if (!string.IsNullOrEmpty(performer.PhotoPath))
                                        {
                                            <img src="@performer.PhotoPath" alt="Student Photo" class="rounded-circle me-3" style="width: 40px; height: 40px; object-fit: cover;">
                                        }
                                        else
                                        {
                                            <div class="bg-success rounded-circle me-3 d-flex align-items-center justify-content-center" style="width: 40px; height: 40px;">
                                                <i class="fas fa-star text-white"></i>
                                            </div>
                                        }
                                        <div>
                                            <h6 class="mb-0">@performer.StudentName</h6>
                                            <small class="text-muted">@performer.ClassName - @performer.AverageMark.ToString("F1")%</small>
                                        </div>
                                    </div>
                                    <span class="badge bg-@(performer.Grade == "A" ? "success" : performer.Grade == "B" ? "primary" : "secondary")">Grade @performer.Grade</span>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No performance data available.</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Grade Distribution Chart -->
    @if (Model.GradeDistribution.Any(g => g.Value > 0))
    {
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Grade Distribution (CBC System)</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            @foreach (var grade in Model.GradeDistribution)
                            {
                                var percentage = Model.GradeDistribution.Values.Sum() > 0 ? (grade.Value * 100.0) / Model.GradeDistribution.Values.Sum() : 0;
                                var description = grade.Key switch
                                {
                                    "A" => "Exceptional Achievement (2.50 – 3.00)",
                                    "B" => "Outstanding Performance (2.10 – 2.49)",
                                    "C" => "Satisfactory Performance (1.60 – 2.09)",
                                    "D" => "Basic Understanding (1.00 – 1.59)",
                                    "E" => "Elementary Understanding (0.00 – 0.99)",
                                    _ => ""
                                };
                                var colorClass = grade.Key switch
                                {
                                    "A" => "success",
                                    "B" => "primary",
                                    "C" => "info",
                                    "D" => "warning",
                                    "E" => "danger",
                                    _ => "secondary"
                                };

                                <div class="col-lg-2 col-md-4 col-6 mb-3">
                                    <div class="text-center">
                                        <div class="progress mb-2" style="height: 10px;">
                                            <div class="progress-bar bg-@colorClass" role="progressbar" style="width: @percentage%" aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                        <h4 class="text-@colorClass">@grade.Value</h4>
                                        <p class="mb-0"><strong>Grade @grade.Key</strong></p>
                                        <small class="text-muted">@description</small>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Class Performance -->
    @if (Model.ClassPerformances.Any())
    {
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Class Performance Overview</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Class</th>
                                        <th>Level</th>
                                        <th>Students</th>
                                        <th>Average Performance</th>
                                        <th>Top Grade</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var classPerf in Model.ClassPerformances.OrderBy(c => c.ClassName))
                                    {
                                        <tr>
                                            <td><strong>@classPerf.ClassName</strong></td>
                                            <td>
                                                <span class="badge bg-@(classPerf.Level == EducationLevel.OLevel ? "info" : "warning")">
                                                    @classPerf.Level.ToString().Replace("Level", "-Level")
                                                </span>
                                            </td>
                                            <td>@classPerf.StudentCount</td>
                                            <td>@classPerf.AveragePerformance.ToString("F1")%</td>
                                            <td>
                                                <span class="badge bg-@(classPerf.TopGrade == "A" ? "success" : classPerf.TopGrade == "B" ? "primary" : "secondary")">
                                                    Grade @classPerf.TopGrade
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
}ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
