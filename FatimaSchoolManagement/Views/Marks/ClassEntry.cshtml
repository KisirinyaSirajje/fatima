@model FatimaSchoolManagement.Models.ViewModels.ClassMarkEntryViewModel
@{
    ViewData["Title"] = "Enter Class Marks";
}

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-md-8">
            <h2>Enter Class Marks - CBC Grading System</h2>
            <p class="text-muted">BOT: 10% | MOT: 20% | EOT: 70% → Final Mark → Grade (A-E)</p>
        </div>
        <div class="col-md-4 text-end">
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-list"></i> View All Marks
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Selection Form -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="card-title mb-0">Select Class and Subject</h5>
        </div>
        <div class="card-body">
            <form asp-action="LoadClassStudents" method="post">
                <div class="row g-3">
                    <div class="col-md-3">
                        <label for="classId" class="form-label">Class *</label>
                        <select asp-for="ClassId" class="form-select" required onchange="loadSubjectsForClass()">
                            <option value="">Select Class</option>
                            @foreach (var cls in Model.Classes)
                            {
                                <option value="@cls.ClassId" selected="@(Model.ClassId == cls.ClassId)">
                                    @cls.ClassName (@cls.LevelDescription)
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label for="subjectId" class="form-label">Subject *</label>
                        <select asp-for="SubjectId" class="form-select" required>
                            <option value="">Select Subject</option>
                            @foreach (var subject in Model.Subjects)
                            {
                                <option value="@subject.SubjectId" selected="@(Model.SubjectId == subject.SubjectId)">
                                    @subject.SubjectName (@subject.LevelDescription)
                                </option>
                            }
                        </select>
                        <small class="form-text text-muted">Subjects are filtered by class education level</small>
                    </div>
                    <div class="col-md-2">
                        <label for="academicYear" class="form-label">Academic Year *</label>
                        <input asp-for="AcademicYear" class="form-control" type="number" min="2020" max="2030" required>
                    </div>
                    <div class="col-md-2">
                        <label for="term" class="form-label">Term *</label>
                        <select asp-for="Term" class="form-select" required>
                            <option value="1" selected="@(Model.Term == Term.Term1)">Term 1</option>
                            <option value="2" selected="@(Model.Term == Term.Term2)">Term 2</option>
                            <option value="3" selected="@(Model.Term == Term.Term3)">Term 3</option>
                        </select>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search"></i> Load Students
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Marks Entry Table -->
    @if (Model.StudentMarks.Any())
    {
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    Marks Entry - @Model.ClassName - @Model.SubjectName 
                    <span class="badge bg-info">@Model.Term.ToString() @Model.AcademicYear</span>
                </h5>
            </div>
            <div class="card-body">
                <form asp-action="SaveClassMarks" method="post">
                    <input type="hidden" asp-for="ClassId" />
                    <input type="hidden" asp-for="SubjectId" />
                    <input type="hidden" asp-for="AcademicYear" />
                    <input type="hidden" asp-for="Term" />

                    <!-- Grading Scale Info -->
                    <div class="alert alert-info mb-3">
                        <h6><i class="fas fa-info-circle"></i> CBC Grading Scale:</h6>
                        <div class="row">
                            <div class="col-md-2"><strong>A (2.50 – 3.00):</strong> Exceptional Achievement</div>
                            <div class="col-md-2"><strong>B (2.10 – 2.49):</strong> Outstanding Performance</div>
                            <div class="col-md-2"><strong>C (1.60 – 2.09):</strong> Satisfactory Performance</div>
                            <div class="col-md-2"><strong>D (1.00 – 1.59):</strong> Basic Understanding</div>
                            <div class="col-md-2"><strong>E (0.00 – 0.99):</strong> Elementary Understanding</div>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Student Number</th>
                                    <th>Student Name</th>
                                    <th>BOT (10%)</th>
                                    <th>MOT (20%)</th>
                                    <th>EOT (70%)</th>
                                    <th>Final Mark</th>
                                    <th>Grade</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.StudentMarks.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            <strong>@Model.StudentMarks[i].StudentNumber</strong>
                                            <input type="hidden" asp-for="StudentMarks[i].StudentId" />
                                            <input type="hidden" asp-for="StudentMarks[i].StudentName" />
                                            <input type="hidden" asp-for="StudentMarks[i].StudentNumber" />
                                        </td>
                                        <td>@Model.StudentMarks[i].StudentName</td>
                                        <td>
                                            <input asp-for="StudentMarks[i].BOTMark" class="form-control form-control-sm mark-input" 
                                                   type="number" min="0" max="100" step="0.1" placeholder="0-100"
                                                   onchange="calculateFinalMark(@i)" />
                                        </td>
                                        <td>
                                            <input asp-for="StudentMarks[i].MOTMark" class="form-control form-control-sm mark-input" 
                                                   type="number" min="0" max="100" step="0.1" placeholder="0-100"
                                                   onchange="calculateFinalMark(@i)" />
                                        </td>
                                        <td>
                                            <input asp-for="StudentMarks[i].EOTMark" class="form-control form-control-sm mark-input" 
                                                   type="number" min="0" max="100" step="0.1" placeholder="0-100"
                                                   onchange="calculateFinalMark(@i)" />
                                        </td>
                                        <td>
                                            <span id="finalMark-@i" class="badge bg-secondary">
                                                @(Model.StudentMarks[i].FinalMark > 0 ? Model.StudentMarks[i].FinalMark.ToString("F1") : "-")
                                            </span>
                                        </td>
                                        <td>
                                            <span id="grade-@i" class="badge @GetGradeBadgeClass(Model.StudentMarks[i].Grade)">
                                                @(string.IsNullOrEmpty(Model.StudentMarks[i].Grade) ? "-" : Model.StudentMarks[i].Grade)
                                            </span>
                                        </td>
                                        <td>
                                            @if (Model.StudentMarks[i].HasExistingRecord)
                                            {
                                                <span class="badge bg-warning">
                                                    <i class="fas fa-edit"></i> Editing
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">
                                                    <i class="fas fa-plus"></i> New
                                                </span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="row mt-3">
                        <div class="col-12">
                            <button type="submit" class="btn btn-success btn-lg">
                                <i class="fas fa-save"></i> Save All Marks
                            </button>
                            <button type="button" class="btn btn-warning btn-lg" onclick="clearAllMarks()">
                                <i class="fas fa-eraser"></i> Clear All
                            </button>
                            <a asp-action="Index" class="btn btn-secondary btn-lg">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(Model.ClassName))
    {
        <div class="alert alert-warning">
            <i class="fas fa-exclamation-triangle"></i>
            No students found in the selected class. Please check your selection.
        </div>
    }
</div>

@functions {
    string GetGradeBadgeClass(string grade)
    {
        return grade switch
        {
            "A" => "bg-success",
            "B" => "bg-primary",
            "C" => "bg-info",
            "D" => "bg-warning",
            "E" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    <script>
        function loadSubjectsForClass() {
            const classSelect = document.querySelector('select[name="ClassId"]');
            const subjectSelect = document.querySelector('select[name="SubjectId"]');
            const classId = classSelect.value;
            
            if (!classId) {
                subjectSelect.innerHTML = '<option value="">Select Subject</option>';
                return;
            }
            
            // Show loading
            subjectSelect.innerHTML = '<option value="">Loading subjects...</option>';
            subjectSelect.disabled = true;
            
            fetch(`/Marks/GetSubjectsForClass?classId=${classId}`)
                .then(response => response.json())
                .then(subjects => {
                    subjectSelect.innerHTML = '<option value="">Select Subject</option>';
                    
                    subjects.forEach(subject => {
                        const option = document.createElement('option');
                        option.value = subject.subjectId;
                        option.textContent = `${subject.subjectName} (${subject.subjectCode})`;
                        subjectSelect.appendChild(option);
                    });
                    
                    subjectSelect.disabled = false;
                })
                .catch(error => {
                    console.error('Error loading subjects:', error);
                    subjectSelect.innerHTML = '<option value="">Error loading subjects</option>';
                    subjectSelect.disabled = false;
                });
        }

        function calculateFinalMark(index) {
            const botInput = document.querySelector(`input[name="StudentMarks[${index}].BOTMark"]`);
            const motInput = document.querySelector(`input[name="StudentMarks[${index}].MOTMark"]`);
            const eotInput = document.querySelector(`input[name="StudentMarks[${index}].EOTMark"]`);
            
            const botMark = parseFloat(botInput.value) || 0;
            const motMark = parseFloat(motInput.value) || 0;
            const eotMark = parseFloat(eotInput.value) || 0;
            
            if (botMark > 0 || motMark > 0 || eotMark > 0) {
                const finalMark = (botMark * 0.1) + (motMark * 0.2) + (eotMark * 0.7);
                const grade = getGrade(finalMark);
                
                document.getElementById(`finalMark-${index}`).textContent = finalMark.toFixed(1);
                document.getElementById(`finalMark-${index}`).className = `badge ${getGradeBadgeClass(grade)}`;
                
                document.getElementById(`grade-${index}`).textContent = grade;
                document.getElementById(`grade-${index}`).className = `badge ${getGradeBadgeClass(grade)}`;
            } else {
                document.getElementById(`finalMark-${index}`).textContent = '-';
                document.getElementById(`finalMark-${index}`).className = 'badge bg-secondary';
                
                document.getElementById(`grade-${index}`).textContent = '-';
                document.getElementById(`grade-${index}`).className = 'badge bg-secondary';
            }
        }
        
        function getGrade(mark) {
            if (mark >= 80) return 'A';
            if (mark >= 70) return 'B';
            if (mark >= 60) return 'C';
            if (mark >= 50) return 'D';
            return 'E';
        }
        
        function getGradeBadgeClass(grade) {
            switch(grade) {
                case 'A': return 'bg-success';
                case 'B': return 'bg-primary';
                case 'C': return 'bg-info';
                case 'D': return 'bg-warning';
                case 'E': return 'bg-danger';
                default: return 'bg-secondary';
            }
        }
        
        function clearAllMarks() {
            if (confirm('Are you sure you want to clear all marks? This action cannot be undone.')) {
                document.querySelectorAll('.mark-input').forEach(input => {
                    input.value = '';
                });
                
                document.querySelectorAll('[id^="finalMark-"]').forEach(span => {
                    span.textContent = '-';
                    span.className = 'badge bg-secondary';
                });
                
                document.querySelectorAll('[id^="grade-"]').forEach(span => {
                    span.textContent = '-';
                    span.className = 'badge bg-secondary';
                });
            }
        }
        
        // Calculate existing marks on page load
        document.addEventListener('DOMContentLoaded', function() {
            @for (int i = 0; i < Model.StudentMarks.Count; i++)
            {
                <text>calculateFinalMark(@i);</text>
            }
        });
    </script>
}