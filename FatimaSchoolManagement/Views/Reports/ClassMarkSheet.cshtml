@model ClassMarkSheetViewModel
@{
    ViewData["Title"] = "Class Mark Sheet";
}

@section Styles {
    <style>
        .mark-sheet-table {
            font-size: 0.8rem;
        }
        
        .mark-sheet-table th,
        .mark-sheet-table td {
            padding: 0.25rem;
            text-align: center;
            border: 1px solid #dee2e6;
            white-space: nowrap;
        }
        
        .student-name {
            text-align: left !important;
            min-width: 150px;
        }
        
        .subject-header {
            background-color: #f8f9fa;
            font-weight: bold;
        }
        
        .subject-subheader {
            background-color: #e9ecef;
            font-size: 0.7rem;
        }
        
        .class-average-row {
            background-color: #fff3cd;
            font-weight: bold;
        }
        
        .grade-a { background-color: #d4edda; }
        .grade-b { background-color: #d1ecf1; }
        .grade-c { background-color: #fff3cd; }
        .grade-d { background-color: #f8d7da; }
        .grade-e { background-color: #f5c6cb; }
        
        @@media print {
            .no-print { display: none !important; }
            .mark-sheet-table { font-size: 0.6rem; }
            .card { border: none; box-shadow: none; }
            .card-header { background-color: white !important; color: black !important; }
        }
        
        .table-container {
            overflow-x: auto;
        }
    </style>
}

<div class="container-fluid no-print">
    <div class="row mb-3">
        <div class="col-md-12">
            <div class="d-flex justify-content-between align-items-center">
                <h2><i class="fas fa-table"></i> Class Mark Sheet</h2>
                <div>
                    <button onclick="printMarkSheet()" class="btn btn-primary">
                        <i class="fas fa-print"></i> Print
                    </button>
                    <a href="@Url.Action("ExportClassMarkSheetToExcel", "Reports", new { classId = Model.Class.ClassId, academicYear = Model.AcademicYear, term = Model.Term })" 
                       class="btn btn-success">
                        <i class="fas fa-file-excel"></i> Export to Excel
                    </a>
                    <a href="@Url.Action("Index", "Reports")" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card">
    <div class="card-header bg-primary text-white">
        <div class="text-center">
            <h3 class="mb-1">OUR LADY OF FATIMA SECONDARY SCHOOL</h3>
            <h4 class="mb-0">CLASS MARK SHEET - @Model.Class.ClassName - @Model.Term @Model.AcademicYear</h4>
        </div>
    </div>
    <div class="card-body p-2">
        <div class="table-container">
            <table class="table table-bordered mark-sheet-table">
                <thead>
                    <tr>
                        <th rowspan="2" class="align-middle">S/N</th>
                        <th rowspan="2" class="align-middle">Student Number</th>
                        <th rowspan="2" class="align-middle student-name">Student Name</th>
                        @foreach (var subject in Model.Subjects)
                        {
                            <th colspan="5" class="subject-header">@subject.SubjectCode</th>
                        }
                        <th rowspan="2" class="align-middle">Average</th>
                        <th rowspan="2" class="align-middle">Grade</th>
                        <th rowspan="2" class="align-middle">Position</th>
                    </tr>
                    <tr>
                        @foreach (var subject in Model.Subjects)
                        {
                            <th class="subject-subheader">BOT</th>
                            <th class="subject-subheader">MOT</th>
                            <th class="subject-subheader">EOT</th>
                            <th class="subject-subheader">Final</th>
                            <th class="subject-subheader">Grade</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @{
                        int studentNumber = 1;
                    }
                    @foreach (var studentRow in Model.StudentRows)
                    {
                        <tr>
                            <td>@studentNumber</td>
                            <td>@studentRow.Student.StudentNumber</td>
                            <td class="student-name">@studentRow.Student.FullName</td>
                            @foreach (var subject in Model.Subjects)
                            {
                                var subjectMark = studentRow.SubjectMarks[subject.SubjectId];
                                <td>@(subjectMark.BOTMark?.ToString("F1") ?? "-")</td>
                                <td>@(subjectMark.MOTMark?.ToString("F1") ?? "-")</td>
                                <td>@(subjectMark.EOTMark?.ToString("F1") ?? "-")</td>
                            <td><strong>@($"{subjectMark.FinalMark.ToString("F1")} ({subjectMark.OLevelPoints.ToString("F2")})")</strong></td>
                            <td class="grade-@subjectMark.Grade.ToLower()">@subjectMark.Grade</td>
                            }
                            <td><strong>@($"{studentRow.OverallAverage.ToString("F1")} ({studentRow.OverallOLevelPoints.ToString("F2")})")</strong></td>
                            <td class="grade-@studentRow.OverallGrade.ToLower()"><strong>@studentRow.OverallGrade</strong></td>
                            <td><strong>@studentRow.Position</strong></td>
                        </tr>
                        studentNumber++;
                    }
                    
                    <!-- Class Average Row -->
                    <tr class="class-average-row">
                        <td colspan="3"><strong>CLASS AVERAGE</strong></td>
                        @foreach (var subject in Model.Subjects)
                        {
                            <td colspan="3"></td>
                            <td><strong>@(Model.ClassAverages.ContainsKey(subject.SubjectCode) ? Model.ClassAverages[subject.SubjectCode].ToString("F1") : "-")</strong></td>
                            <td></td>
                        }
                        @{
                            var overallClassAverage = Model.StudentRows.Where(sr => sr.OverallAverage > 0).Any() 
                                ? Model.StudentRows.Where(sr => sr.OverallAverage > 0).Average(sr => sr.OverallAverage) 
                                : 0;
                        }
                        <td><strong>@overallClassAverage.ToString("F1")</strong></td>
                        <td><strong>@(overallClassAverage >= 80 ? "A" : overallClassAverage >= 70 ? "B" : overallClassAverage >= 60 ? "C" : overallClassAverage >= 50 ? "D" : "E")</strong></td>
                        <td></td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="row mt-4 no-print">
            <div class="col-md-6">
                <div class="card border-info">
                    <div class="card-header bg-info text-white">
                        <h6 class="mb-0">Class Statistics</h6>
                    </div>
                    <div class="card-body">
                        <p class="mb-1"><strong>Total Students:</strong> @Model.StudentRows.Count</p>
                        <p class="mb-1"><strong>Class Average:</strong> @overallClassAverage.ToString("F1")%</p>
                        <p class="mb-1"><strong>Subjects Offered:</strong> @Model.Subjects.Count</p>
                        <p class="mb-0"><strong>Level:</strong> @(Model.Class.Level == EducationLevel.OLevel ? "O-Level" : "A-Level")</p>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card border-warning">
                    <div class="card-header bg-warning">
                        <h6 class="mb-0">Grading System</h6>
                    </div>
                    <div class="card-body">
                        <div class="small">
                            <p class="mb-1"><span class="badge grade-a">A</span> 2.50 – 3.00: Exceptional Achievement</p>
                            <p class="mb-1"><span class="badge grade-b">B</span> 2.10 – 2.49: Outstanding Performance</p>
                            <p class="mb-1"><span class="badge grade-c">C</span> 1.60 – 2.09: Satisfactory Performance</p>
                            <p class="mb-1"><span class="badge grade-d">D</span> 1.00 – 1.59: Basic Understanding</p>
                            <p class="mb-0"><span class="badge grade-e">E</span> 0.00 – 0.99: Elementary Understanding</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="text-center mt-4">
            <small class="text-muted">
                Generated on @DateTime.Now.ToString("dd/MM/yyyy HH:mm") | 
                CBC Grading System: BOT (10%) + MOT (20%) + EOT (70%) = Final Mark
            </small>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function printMarkSheet() {
            window.print();
        }
    </script>
}